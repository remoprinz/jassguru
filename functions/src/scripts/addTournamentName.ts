import * as admin from 'firebase-admin';
import { onCall, HttpsError } from 'firebase-functions/v2/https';

/**
 * Einfaches Script zum Hinzuf√ºgen des Turniernamens f√ºr das Krakau 2025 Turnier
 */
export const addTournamentNameForKrakau = async () => {
  const db = admin.firestore();
  
  try {
    console.log('üöÄ F√ºge Turniername f√ºr Krakau 2025 hinzu...');
    
    const tournamentId = 'kjoeh4ZPGtGr8GA8gp9p';
    const tournamentName = 'Krakau 2025';
    
    // 1. Alle Gruppen durchgehen
    const groupsSnapshot = await db.collection('groups').get();
    console.log(`üìÅ Gefunden: ${groupsSnapshot.size} Gruppen`);
    
    let totalUpdated = 0;
    
    for (const groupDoc of groupsSnapshot.docs) {
      const groupId = groupDoc.id;
      
      // 2. Turnier-Sessions f√ºr dieses spezifische Turnier finden
      const summariesSnapshot = await db
        .collection('groups')
        .doc(groupId)
        .collection('jassGameSummaries')
        .where('tournamentId', '==', tournamentId)
        .get();
      
      if (summariesSnapshot.size > 0) {
        console.log(`üìä Gruppe ${groupId}: ${summariesSnapshot.size} Sessions f√ºr Krakau gefunden`);
        
        for (const summaryDoc of summariesSnapshot.docs) {
          const data = summaryDoc.data();
          
          // 3. Pr√ºfen ob bereits tournamentName vorhanden ist
          if (data.tournamentName) {
            console.log(`‚úÖ ${summaryDoc.id}: tournamentName bereits vorhanden (${data.tournamentName})`);
            continue;
          }
          
          // 4. tournamentName hinzuf√ºgen
          await summaryDoc.ref.update({
            tournamentName: tournamentName
          });
          
          console.log(`‚úÖ ${summaryDoc.id}: tournamentName "${tournamentName}" hinzugef√ºgt`);
          totalUpdated++;
        }
      }
    }
    
    console.log(`\nüéâ Fertig! ${totalUpdated} Sessions f√ºr Krakau 2025 aktualisiert.`);
  } catch (error) {
    console.error('‚ùå Fehler beim Hinzuf√ºgen des Turniernamens:', error);
    throw error;
  }
};

/**
 * Cloud Function zum Ausf√ºhren des Scripts
 */
export const runAddTournamentNameScript = onCall(async (request) => {
  // Sicherheitspr√ºfung: Nur authentifizierte Benutzer
  if (!request.auth) {
    throw new HttpsError('unauthenticated', 'Nur authentifizierte Benutzer k√∂nnen dieses Script ausf√ºhren.');
  }
  
  try {
    await addTournamentNameForKrakau();
    return { success: true, message: 'Turniername f√ºr Krakau 2025 erfolgreich hinzugef√ºgt.' };
  } catch (error) {
    console.error('Fehler beim Ausf√ºhren des Scripts:', error);
    throw new HttpsError('internal', 'Fehler beim Hinzuf√ºgen des Turniernamens.');
  }
});