const { initializeApp } = require('firebase/app');
const { getFirestore, doc, getDoc, setDoc, deleteDoc, collection } = require('firebase/firestore');

const firebaseConfig = {
  apiKey: "AIzaSyBmvHu1pNzTLJhLWF2KdmJuXlPUJqKrxUo",
  authDomain: "jassguru-7a213.firebaseapp.com",
  projectId: "jassguru-7a213",
  storageBucket: "jassguru-7a213.appspot.com",
  messagingSenderId: "266239362897",
  appId: "1:266239362897:web:e0b8b7d8a9d9a8b5dc6c6f"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

async function moveJuly3GamesToSubcollection() {
  console.log('üîÑ Verschiebe Juli 3. Spiele in die korrekte Subcollection-Struktur...');
  
  const sessionId = 'GvshcbgPDCtbhCeqHApvk';
  const gameIds = ['BddFeTmedf7hipTcMcGk', 'viQQv1biZzrahe1iQ4Cd', 'KqErTLHxrfe5IMQKAGTW'];
  
  console.log(`üìÅ Ziel-Subcollection: jassGameSummaries/${sessionId}/completedGames/`);
  
  for (const gameId of gameIds) {
    console.log(`\n=== Verschiebe Game ${gameId} ===`);
    
    try {
      // 1. Lade das urspr√ºngliche Dokument aus der Hauptebene
      console.log('üìñ Lade urspr√ºngliches Dokument...');
      const originalGameRef = doc(db, 'jassGameSummaries', gameId);
      const originalGameDoc = await getDoc(originalGameRef);
      
      if (!originalGameDoc.exists()) {
        console.log('‚ùå Originaldokument existiert nicht');
        continue;
      }
      
      const gameData = originalGameDoc.data();
      console.log('‚úÖ Originaldokument geladen');
      console.log(`   - finalScores: ${JSON.stringify(gameData.finalScores)}`);
      console.log(`   - finalStriche top: ${JSON.stringify(gameData.finalStriche?.top)}`);
      console.log(`   - finalStriche bottom: ${JSON.stringify(gameData.finalStriche?.bottom)}`);
      console.log(`   - roundHistory: ${gameData.roundHistory?.length || 0} Runden`);
      
      // 2. Erstelle das neue Dokument in der Subcollection
      console.log('üíæ Erstelle Dokument in Subcollection...');
      const newGameRef = doc(db, 'jassGameSummaries', sessionId, 'completedGames', gameId);
      await setDoc(newGameRef, gameData);
      console.log('‚úÖ Dokument in Subcollection erstellt');
      
      // 3. Verifiziere, dass das neue Dokument korrekt erstellt wurde
      console.log('üîç Verifiziere neues Dokument...');
      const newGameDoc = await getDoc(newGameRef);
      if (!newGameDoc.exists()) {
        console.log('‚ùå FEHLER: Neues Dokument wurde nicht korrekt erstellt!');
        continue;
      }
      
      const newGameData = newGameDoc.data();
      console.log('‚úÖ Neues Dokument verifiziert');
      console.log(`   - finalScores: ${JSON.stringify(newGameData.finalScores)}`);
      console.log(`   - finalStriche top: ${JSON.stringify(newGameData.finalStriche?.top)}`);
      console.log(`   - finalStriche bottom: ${JSON.stringify(newGameData.finalStriche?.bottom)}`);
      
      // 4. L√∂sche das urspr√ºngliche Dokument aus der Hauptebene
      console.log('üóëÔ∏è L√∂sche urspr√ºngliches Dokument...');
      await deleteDoc(originalGameRef);
      console.log('‚úÖ Urspr√ºngliches Dokument gel√∂scht');
      
      // 5. Final-Verifikation - pr√ºfe, dass das urspr√ºngliche Dokument weg ist
      console.log('üîç Final-Verifikation...');
      const deletedCheck = await getDoc(originalGameRef);
      if (deletedCheck.exists()) {
        console.log('‚ùå WARNUNG: Urspr√ºngliches Dokument existiert noch!');
      } else {
        console.log('‚úÖ Urspr√ºngliches Dokument erfolgreich gel√∂scht');
      }
      
      console.log(`üéâ Game ${gameId} erfolgreich verschoben!`);
      
    } catch (error) {
      console.error(`‚ùå Fehler beim Verschieben von Game ${gameId}:`, error);
      console.log('‚ö†Ô∏è ACHTUNG: Operation abgebrochen. Manuelle √úberpr√ºfung erforderlich!');
      break; // Stoppe bei Fehlern, um Datenverlust zu vermeiden
    }
  }
  
  console.log('\nüéØ Zusammenfassung:');
  console.log('Die Juli 3. Spiele sollten jetzt in der korrekten Subcollection-Struktur sein:');
  console.log(`- jassGameSummaries/${sessionId}/completedGames/BddFeTmedf7hipTcMcGk`);
  console.log(`- jassGameSummaries/${sessionId}/completedGames/viQQv1biZzrahe1iQ4Cd`);
  console.log(`- jassGameSummaries/${sessionId}/completedGames/KqErTLHxrfe5IMQKAGTW`);
  console.log('\n‚úÖ Die fetchAllGamesForSession Funktion sollte die Spiele jetzt finden!');
}

moveJuly3GamesToSubcollection().catch(console.error); 