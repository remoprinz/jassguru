// !!! WARNUNG: EXTREM OFFENE REGELN - NUR FÜR DEBUGGING !!!
// !!! NICHT FÜR PRODUKTION VERWENDEN !!!
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =====================================================================
    // PLAYERS - Öffentliche Spielerprofile
    // =====================================================================
    match /players/{playerId} {
      // Jeder darf Spielerprofile lesen (für Namen, Bilder etc.)
      allow read: if true;

      // Erstellen: Nur für sich selbst oder als Gastspieler
      allow create: if request.auth != null &&
                       (request.resource.data.userId == request.auth.uid ||
                        (request.resource.data.isGuest == true && request.resource.data.userId == null));

      // Aktualisieren: Nur eigene Profile oder Gastspieler
      allow update: if request.auth != null &&
                       (resource.data.userId == request.auth.uid ||
                        resource.data.isGuest == true);
                        
      // Löschen: Nur eigene Profile oder Gastspieler
      allow delete: if request.auth != null &&
                       (resource.data.userId == request.auth.uid || 
                        resource.data.isGuest == true);
    }

    // =====================================================================
    // USERS - Private Benutzerdaten
    // =====================================================================
    match /users/{userId} {
      // Zugriff: Nur der Benutzer selbst
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Erstellen: E-Mail muss mit Token übereinstimmen
      allow create: if request.auth != null && 
                       request.auth.uid == userId &&
                       request.resource.data.email == request.auth.token.email;

      // Aktualisieren: playerId und email sind unveränderlich
      allow update: if request.auth != null && 
                       request.auth.uid == userId &&
                       request.resource.data.playerId == resource.data.playerId &&
                       request.resource.data.email == resource.data.email;
      
      // Löschen verboten (Datenintegrität)
      allow delete: if false;
    }

    // =====================================================================
    // GROUPS - Gruppen
    // =====================================================================
    match /groups/{groupId} {
      // Jeder darf Gruppen lesen (E-Mails wurden entfernt)
      allow read: if true;

      // Erstellen: Ersteller wird automatisch Admin
      allow create: if request.auth != null && 
                    request.auth.uid in request.resource.data.adminIds &&
                    request.resource.data.createdBy == request.auth.uid;

      // Aktualisieren: Nur Gruppen-Admins
      allow update: if request.auth != null && 
                    request.auth.uid in resource.data.adminIds;

      // Löschen: Nur der ursprüngliche Ersteller
      allow delete: if request.auth != null && 
                    request.auth.uid == resource.data.createdBy;
    }

    // =====================================================================
    // ACTIVEGAMES - Laufende Spiele
    // =====================================================================
    match /activeGames/{gameId} {
      // Jeder darf laufende Spiele lesen (es ist nur Jassen)
      allow read: if true;

      // Erstellen: Nur wenn man selbst Teilnehmer ist
      allow create: if request.auth != null && 
                    request.auth.uid in request.resource.data.participantUids;

      // Aktualisieren: Nur Teilnehmer dürfen den Spielstand ändern
      allow update: if request.auth != null && 
                    request.auth.uid in resource.data.participantUids;

      // Löschen verboten (erfolgt kontrolliert über Cloud Functions)
      allow delete: if false;

      // Rounds-Subcollection: Gleiche Regeln wie Hauptdokument
      match /rounds/{roundId} {
        allow read: if true;
        allow write: if request.auth != null && 
                     request.auth.uid in get(/databases/$(database)/documents/activeGames/$(gameId)).data.participantUids;
        allow delete: if false;
      }
    }

    // =====================================================================
    // TOURNAMENTS - Turniere
    // =====================================================================
    match /tournaments/{tournamentId} {
      // Jeder darf Turniere lesen
      allow read: if true;

      // Erstellen: Ersteller wird automatisch Admin
      allow create: if request.auth != null && 
                    request.auth.uid in request.resource.data.adminIds &&
                    request.resource.data.createdBy == request.auth.uid;

      // Aktualisieren: Nur Turnier-Admins
      allow update: if request.auth != null && 
                    request.auth.uid in resource.data.adminIds;

      // Löschen verboten (Turniere sind Teil der Historie)
      allow delete: if false;

      // Tournament Games-Subcollection: Nur Admins dürfen schreiben
      match /games/{gameId} {
        allow read: if true;
        allow write: if request.auth != null && 
                     request.auth.uid in get(/databases/$(database)/documents/tournaments/$(tournamentId)).data.adminIds;
        allow delete: if false;
      }
    }

    // =====================================================================
    // FALLBACK - Alle anderen Collections
    // =====================================================================
    // Gilt für: sessions, jassGameSummaries, groupComputedStats, etc.
    // Diese werden primär von Cloud Functions verwaltet.
    match /{document=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}